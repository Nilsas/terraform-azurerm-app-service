trigger:
- none

variables:
- group: test-tf
- group: management-git
- group: Azure-App-Service

- name: resourcetype
  value: 'azure_app_service'
- name: resourcenameprefix
  value: 'azure_app_service'

- name: provider_azurerm_ver
  value: '2.52.0'
- name: provider_random_ver
  value: '3.1.0'
- name: terraformversion
  value: '0.14.8'
- name: environment
  value: dev

- name: app_service_module_branch
  value: '1.0.0'

- name: app_service_module_name
  value: az-app-service

- name: network_security_group_module_branch
  value: '1.0.2'

- name: network_security_group_module_name
  value: az-network-security-group

- name: storage_account_module_branch
  value: '1.0.1'

- name: storage_account_module_name
  value: az-storage-account

- name: virtual_network_module_branch
  value: '1.0.1'

- name: virtual_network_module_name
  value: az-virtual-network

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
  - repository: templates
    type: git
    name: 'Cloudeon CCOE/mgmt-pipeline-template'
    ref: 'refs/heads/main'

stages:

- stage: build
  displayName: Build
  jobs: 
  - template: stage-git-tf-build.yaml@templates
    parameters:
      environment: contributor
      environmentshort: contributor
      clientprefix: landingzonetest
      resourcetype: ${{ variables.resourcetype }}
      resourcenameprefix: ${{ variables.resourcenameprefix }}
      backendcontainername: $(backendcontainername)
      backendresourcegroup: $(backendresourcegroup)
      backendstorageaccount: $(backendstorageaccount)
      terraformversion: ${{ variables.terraformversion }}
      accesstoken: $(access-token)
      knownHostsEntry: $(knownHostsEntry)
      sshpub: '$(sshpub)'
      sshpassphrase: $(sshpassphrase)
      serviceconnection: $(serviceconnection)
      subscriptionname : $(subscriptionname)
      subfolder : $(subfolder)
      customTerraformArguments: '-var client_id=$(client_id) -var client_secret=$(client_secret) -input=false'
      TFLogLevel: ''

- stage: deploy
  displayName: Deploy
  jobs: 
  - template: stage-git-tf-deploy.yaml@templates
    parameters:
      environment: contributor
      environmentshort: contributor
      clientprefix: landingzonetest
      resourcetype: ${{ variables.resourcetype }}
      resourcenameprefix: ${{ variables.resourcenameprefix }}
      backendcontainername: $(backendcontainername)
      backendresourcegroup: $(backendresourcegroup)
      backendstorageaccount: $(backendstorageaccount)
      terraformversion: ${{ variables.terraformversion }}
      accesstoken: $(access-token)
      knownHostsEntry: $(knownHostsEntry)
      sshpub: '$(sshpub)'
      sshpassphrase: $(sshpassphrase)
      serviceconnection: $(serviceconnection)
      subscriptionname : $(subscriptionname)
      customTerraformArguments: '-var client_id=$(client_id) -var client_secret=$(client_secret) -input=false'
      TFLogLevel: ''

- stage: destroy_approval
  displayName: destroy_approval
  jobs:
  - job: waitForValidation
    displayName: Wait for external validation  
    pool: server    
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:   
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
          notifyUsers:
          instructions: 'Please validate the build configuration and resume'
          onTimeout: 'resume'  

- stage: destroy
  displayName: Destroy
  jobs: 
  - template: stage-git-tf-destroy.yaml@templates
    parameters:
      environment: contributor
      environmentshort: contributor
      clientprefix: landingzonetest
      resourcetype: ${{ variables.resourcetype }}
      resourcenameprefix: ${{ variables.resourcenameprefix }}
      backendcontainername: $(backendcontainername)
      backendresourcegroup: $(backendresourcegroup)
      backendstorageaccount: $(backendstorageaccount)
      terraformversion: ${{ variables.terraformversion }}
      accesstoken: $(access-token)
      knownHostsEntry: $(knownHostsEntry)
      sshpub: '$(sshpub)'
      sshpassphrase: $(sshpassphrase)
      serviceconnection: $(serviceconnection)
      subscriptionname : $(subscriptionname)
      TFLogLevel: ''
